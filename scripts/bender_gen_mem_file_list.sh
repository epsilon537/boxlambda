#! /bin/bash

#This script is used by the build system. It does the following:
#- It copies any .mem files referenced in the Bender manifest to the GW build tree, e.g. palette.mem.
#- If a software image .mem file is passed in, it replaces the default cmem.mem image from the Bender manifest.
#- It generates a tcl sub script for mem files to be included in the main vivado.tcl script.
#This script does not handle the .mem file generated by the SW build system. That's handled in a separate,
#post-synthesis build step.

if [[ "$#" < 3  || "$1" == "-h" ]]
then
  echo "$0 <src dir> <script file> vivado|verilator|openxc7 [sw image .mem file]"
  exit 1
fi

SRC_DIR=$1
SCRIPT_FILE_NAME=$2
TARGET=$3
SW_IMAGE=$4

echo "#Memory files" > $SCRIPT_FILE_NAME.tmp

MEM_FILE_LIST=`bender -d $SRC_DIR script -t memory_$TARGET flist`

#Remove the generated Bender.lock file to keep the source tree clean.
rm -f $SRC_DIR/Bender.lock

for f in $MEM_FILE_LIST
do
  #Copy the file to the build directory.
  cp -f $f .
  echo "add_files -norecurse $f" >> $SCRIPT_FILE_NAME.tmp
done

if [ -n "$SW_IMAGE" ]; then
  echo "Copying SW image $SW_IMAGE to cmem.mem"
  cp -f $SW_IMAGE ./cmem.mem
fi

if cmp --silent -- "$SCRIPT_FILE_NAME" "$SCRIPT_FILE_NAME.tmp"; then
  echo "No memory filelist changes detected."
else
  echo "Updating memory filelist".
  cp $SCRIPT_FILE_NAME.tmp $SCRIPT_FILE_NAME
fi

rm $SCRIPT_FILE_NAME.tmp
