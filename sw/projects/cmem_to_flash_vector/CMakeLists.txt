# This SW project builds the startup vector code intended for initial CMEM RAM
# contents. The Ibex RISCV CPU boots from 0x80, which is located in CMEM. The
# vector code initializes CPU registers and branches to flash-based startup
# code (0x11400000). The same vector.S code is used as for SW builds that are
# linked to boot from CMEM.
#
# Cmem.mem in the current directory is a checked in version of the .mem file
# generated by builing cmem_to_flash_vector. It is used as the default
# memory initialization file for the CMEM RAM. It's contents can be replaced by
# a post-implementation memory update (i.e. building a _bit_sw target) but as long as
# that is not done (i.e. when just building a _bit target), CMEM will contain the
# startup code that branches to a SW image in flash memory.

add_executable(cmem_to_flash_vector
    EXCLUDE_FROM_ALL
      ${PROJECT_SOURCE_DIR}/sw/components/bootstrap/vectors.S)

#Externally define some linker symbols: _start, __cmem_size and __dmem_size.
#0x11400000 is SPI Flash User Memory, offset 0x40000 to skip over the space
#reserved for the bitsream.
target_link_options(cmem_to_flash_vector
    PRIVATE
      "LINKER:--defsym=_start=0x11400000"
)

link_and_create_image(cmem_to_flash_vector ${PROJECT_SOURCE_DIR}/sw/components/bootstrap/link_cmem_boot.ld)

