# This SW project builds the startup vector code intended for initial IMEM RAM
# contents. The Ibex RISCV CPU boots from 0x80, which is located in IMEM. The
# vector code initializes CPU registers and branches to flash-based startup
# code (0x11400000). The same vector.S code is used as for SW builds that are
# linked to boot from IMEM.
#
# Imem.mem in the current directory is a checked in version of the .mem file
# generated by builing imem_to_flash_vector. It is used as the default
# memory initialization file for the IMEM RAM. It's contents can be replaced by
# a post-implementation memory update (i.e. building a _bit_sw target) but as long as
# that is not done (i.e. when just building a _bit target), IMEM will contain the
# startup code that branches to a SW image in flash memory.

add_executable(imem_to_flash_vector
    EXCLUDE_FROM_ALL
      ${PROJECT_SOURCE_DIR}/sw/components/bootstrap/vectors.S)

#0x11400000 is SPI Flash User Memory, offset 0x40000 to skip over the space
#reserved for the bitsream.
target_link_options(imem_to_flash_vector
    PRIVATE
      "LINKER:--defsym=_start=0x11400000"
)

link_and_create_image(imem_to_flash_vector ${PROJECT_SOURCE_DIR}/sw/components/bootstrap/link_imem_boot.ld)

#Copy imem_to_flash_vector.mem to imem.mem. It's the default
#imem.mem on FPGA builds.
add_custom_command(
  TARGET imem_to_flash_vector
  POST_BUILD
  WORKING_DIRECTORY
      ${CMAKE_CURRENT_BINARY_DIR}
  COMMAND cp -f imem_to_flash_vector.mem imem.mem
  COMMENT "Copying imem_to_flash_vector.mem to imem.mem"
  VERBATIM
)

#Add imem_to_flash_vector to codegeneration dependency list.
#It's the default IMEM .mem file.
add_dependencies(cgen imem_to_flash_vector)
