.include "picoasm_hal.h"

/*Word Copy Burst Mode test program*/

    .text
    .balign 4
    .globl _start
    /*Status register values*/
    .equ STAT_START, 1
    .equ STAT_BUSY, 3
    .equ STAT_DONE, 0

_start:
    li a0, HIR_REGS_BASE_ADDR
    li a4, BURST_REGS_BASE_ADDR
    li a5, 0x80000000
wait_start:
    lw a1, HIR3(a0)   /*HIR3: ctrl-status*/
    beqz a1, wait_start
    li a1, STAT_BUSY
    sw a1, HIR3(a0)   /*set status to 'Busy'*/

    lw a1, HIR0(a0)        /*HIR0: src pointer*/
    or a1, a1, a5          /*Set msb to engage burst mode*/
    lw a2, HIR1(a0)        /*HIR1: dst pointer - may be misaligned*/
    andi a6, a2, 3         /*src-to-dst offset*/
    sw a6, BURST_OFFSET(a4) 
    sub a2, a2, a6         /*make dst word aligned*/
    or a2, a2, a5          /*Set msb to engage burst mode*/
    lw a3, HIR2(a0)        /*HIR2: num words*/
                           /*To keep the test program simple, I'm not handling the edge cases. num words is*/
                           /*assumed to be a multiple of 4.*/
    slli a3, a3, 2         /*Multiple by 4 to convert to byte address offset.*/
    add a3, a3, a1 
    
loop:
    /*Copy 4-word burst by 4-word burst*/
    lw t0, 0(a1)
    sw t0, 0(a2)
    addi a1, a1, 16
    addi a2, a2, 16
    bltu a1, a3, loop

    sw zero, BURST4(a4) /*Do one more write to a burst register to ensure last burst transaction completed.*/
    sw zero, HIR3(a0) /*set to 'Done'*/
    j wait_start
