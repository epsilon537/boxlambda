.include "picoasm_hal.h"

/*Word Copy Burst Mode test program*/
/*This is just the core of a DMA copy routine using burst mode.*/
/*Edge case, handling of initial and final words/bytes etc. are not handled here.*/
/*This is just the bare minimal copy loop exercising the PicoRV_Burst_FSM logic.*/

#define hir_base x1
#define burst_base x2
#define msb_set x3
#define tmp x4
#define src x5
#define dst x6
#define end_ptr x7

    .text
    .balign 4
    .globl _start
    /*Status register values*/
    .equ STAT_START, 1
    .equ STAT_BUSY, 3
    .equ STAT_DONE, 0

_start:
    li hir_base, HIR_REGS_BASE_ADDR
    li burst_base, BURST_REGS_BASE_ADDR
    li msb_set, 0x80000000
wait_start:
    lw tmp, HIR3(hir_base)   /*HIR3: ctrl-status*/
    beqz tmp, wait_start
    li tmp, STAT_BUSY
    sw tmp, HIR3(hir_base)   /*set status to 'Busy'*/

    lw src, HIR0(hir_base)        /*HIR0: src pointer*/
    or src, src, msb_set          /*Set msb to engage burst mode*/
    lw dst, HIR1(hir_base)        /*HIR1: dst pointer - may be misaligned*/
    andi tmp, dst, 3              /*dst-to-src byte offset*/
    sw tmp, BURST_OFFSET(burst_base) 
    sub dst, dst, tmp             /*make dst word aligned*/
    or dst, dst, msb_set          /*Set msb to engage burst mode*/
    lw end_ptr, HIR2(hir_base)    /*HIR2: num words*/
    /*To keep the test program simple, I'm not handling the edge cases. num words is*/
    /*assumed to be a multiple of 4.*/
    slli end_ptr, end_ptr, 2      /*Multiple by 4 to convert to byte address offset.*/
    add end_ptr, end_ptr, src 
    
loop:
    /*Copy 4-word burst by 4-word burst*/
    lw tmp, 0(src)
    sw tmp, 0(dst)
    addi src, src, 16
    addi dst, dst, 16
    bltu src, end_ptr, loop

    sw zero, BURST4(burst_base) /*Do one more write to a burst register to ensure last burst transaction completed.*/
    sw zero, HIR3(hir_base)     /*set to 'Done'*/
    j wait_start
