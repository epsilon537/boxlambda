/*Test R/W data access to Program Memory.*/

    .text
    .balign 4
    .globl _start
    .equ GP_REGS_BASE_ADDR, 0x10003040
    /*GP register offsets*/
    .equ GP0, 0
    .equ GP1, 4
    .equ GP2, 8
    .equ GP3, 12
    /*Status register values*/
    .equ STAT_START, 1
    .equ STAT_BUSY, 3
    .equ STAT_DONE, 0
_start:
    li a0, GP_REGS_BASE_ADDR
    /*Point a4 to 'var'*/
    lui a4, %hi(var)
    addi a4, a4, %lo(var)
wait_start:
    lw a1, GP3(a0)   /*GP3: ctrl-status*/
    beqz a1, wait_start
    li a1, STAT_BUSY
    sw a1, GP3(a0)   /*set status to 'Busy'*/

    lw a1, GP0(a0)  /*GP0: word to store*/
    sw a1, 0(a4)    /*store the word in prog mem*/
    lw a2, 0(a4)    /*load the word again from prog mem*/
    sw a2, GP1(a0)  /*store the word in GP1*/ 

    sw zero, GP3(a0) /*set to status 'Done'*/
loop:
    j loop
    
    .balign 4

/*Space for one data word in Program Memory.*/
var:
    .word 0
