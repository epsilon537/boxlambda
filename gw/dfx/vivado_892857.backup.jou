#-----------------------------------------------------------
# Vivado v2023.1 (64-bit)
# SW Build 3865809 on Sun May  7 15:04:56 MDT 2023
# IP Build 3864474 on Sun May  7 20:36:21 MDT 2023
# SharedData Build 3865790 on Sun May 07 13:33:03 MDT 2023
# Start of session at: Sat Sep 21 11:17:51 2024
# Process ID: 892857
# Current directory: /home/epsilon/work/boxlambda/gw/dfx
# Command line: vivado -mode gui
# Log file: /home/epsilon/work/boxlambda/gw/dfx/vivado.log
# Journal file: /home/epsilon/work/boxlambda/gw/dfx/vivado.jou
# Running On: asustuf, OS: Linux, CPU Frequency: 3755.868 MHz, CPU Physical cores: 6, Host memory: 16615 MB
#-----------------------------------------------------------
start_gui
set part "xc7a100ticsg324-1L"
set inst boxlambda_soc_inst/vs0_inst
create_project -in_memory -part $part
add_files -norecurse /home/epsilon/work/boxlambda/build/arty-a7-100/gw/projects/dfx_test/project.runs/synth_1/boxlambda_top.dcp
add_files -fileset constrs_1 -norecurse /home/epsilon/work/boxlambda/gw/projects/boxlambda_top/constrs/boxlambda_soc.xdc
add_files -norecurse /home/epsilon/work/boxlambda/build/arty-a7-100/gw/components/vs0_j1b/project.runs/synth_1/vs0.dcp
read_ip ../ip/dfx_controller/dfx_controller_0/dfx_controller_0.xci
close_project
set part "xc7a100ticsg324-1L"
set inst boxlambda_soc_inst/vs0_inst
create_project -in_memory -part $part
add_files -norecurse /home/epsilon/work/boxlambda/build/arty-a7-100/gw/projects/dfx_test/project.runs/synth_1/boxlambda_top.dcp
add_files -fileset constrs_1 -norecurse /home/epsilon/work/boxlambda/gw/projects/boxlambda_top/constrs/boxlambda_soc.xdc
add_files -norecurse /home/epsilon/work/boxlambda/build/arty-a7-100/gw/components/vs0_j1b/project.runs/synth_1/vs0.dcp
read_ip ../ip/dfx_controller/dfx_controller_0.xci
read_ip ../ip/ila/ila_0.xci
set_property SCOPED_TO_CELLS {boxlambda_soc_inst/vs0_inst} [get_files /home/epsilon/work/boxlambda/build/arty-a7-100/gw/components/vs0_j1b/project.runs/synth_1/vs0.dcp]
link_design -mode default -reconfig_partitions {boxlambda_soc_inst/vs0_inst} -part $part -top boxlambda_top
write_debug_probes -force ./debug_probes.ltx
write_checkpoint -force ./Checkpoint/boxlambda_top_link_vs0_j1b.dcp
create_pblock pblock_vs0_inst
add_cells_to_pblock [get_pblocks pblock_vs0_inst] [get_cells -quiet [list boxlambda_soc_inst/vs0_inst]]
resize_pblock [get_pblocks pblock_vs0_inst] -add {SLICE_X6Y100:SLICE_X45Y149}
resize_pblock [get_pblocks pblock_vs0_inst] -add {DSP48_X0Y40:DSP48_X0Y59}
resize_pblock [get_pblocks pblock_vs0_inst] -add {RAMB18_X0Y40:RAMB18_X0Y59}
resize_pblock [get_pblocks pblock_vs0_inst] -add {RAMB36_X0Y20:RAMB36_X0Y29}
set_property RESET_AFTER_RECONFIG true [get_pblocks pblock_vs0_inst]
set_property SNAPPING_MODE ON [get_pblocks pblock_vs0_inst]
opt_design
place_design
route_design
get_pplocs -pins [get_pins boxlammbda_soc_inst/vs0_inst/*]
get_pplocs -pins [get_pins boxlambda_soc_inst/vs0_inst/*]
get_pplocs -unlocked -pins [get_pins boxlambda_soc_inst/vs0_inst/*]
get_pplocs -verbose -pins [get_pins boxlambda_soc_inst/vs0_inst/*]
set rp_name boxlamba_soc_inst/vs0_inst
set f [open partpin.xdc a] 
set rp_pin [get_pins -of [get_cells $rp_name \\]]
set rp_name boxlambda_soc_inst/vs0_inst
set f [open partpin.xdc a]
set rp_pin [get_pins -of [get_cells $rp_name]]
llength $rp_pin
foreach s_pin $rp_pin {
  set s_partpin [get_pplocs -pins [get_pins $s_pin]]
  if {$s_partpin != ""} {
    puts $f "set_property HD.PARTPIN_LOCS $s_partpin \[get_pins $s_pin \]"
  }
}
close $f
